-- Migration: Create weight_records table
-- Purpose: Store daily weight measurements for users
-- Affected tables: weight_records
-- Created: 2025-10-12

-- create the weight_records table
-- this table stores daily weight measurements for tracking user weight over time
create table weight_records (
  id int generated by default as identity primary key,
  user_id uuid not null references users(id) on delete cascade,
  date date not null,
  weight_kg decimal(5, 2) not null,
  created_at timestamptz not null default now()
);

comment on table weight_records is 'Stores daily weight records for users.';
comment on column weight_records.id is 'Unique identifier for each weight record';
comment on column weight_records.user_id is 'References the users table with cascade delete';
comment on column weight_records.date is 'Date of the weight measurement';
comment on column weight_records.weight_kg is 'Weight in kilograms (up to 999.99 kg)';
comment on column weight_records.created_at is 'Timestamp when the record was created';

-- create index on user_id for efficient queries by user
create index idx_weight_records_user_id on weight_records(user_id);

-- create index on date for efficient date-based queries and chart generation
create index idx_weight_records_date on weight_records(date);

-- enable row level security
-- this ensures users can only access their own weight records
alter table weight_records enable row level security;

-- create rls policy for select operations (anon role)
-- anon users cannot select any weight records
create policy "anon_weight_records_select_policy"
on weight_records for select
to anon
using (false);

-- create rls policy for select operations (authenticated role)
-- authenticated users can only select their own weight records
create policy "authenticated_weight_records_select_policy"
on weight_records for select
to authenticated
using (user_id = auth.uid());

-- create rls policy for insert operations (anon role)
-- anon users cannot insert weight records
create policy "anon_weight_records_insert_policy"
on weight_records for insert
to anon
with check (false);

-- create rls policy for insert operations (authenticated role)
-- authenticated users can only insert their own weight records
create policy "authenticated_weight_records_insert_policy"
on weight_records for insert
to authenticated
with check (user_id = auth.uid());

-- create rls policy for update operations (anon role)
-- anon users cannot update weight records
create policy "anon_weight_records_update_policy"
on weight_records for update
to anon
using (false)
with check (false);

-- create rls policy for update operations (authenticated role)
-- authenticated users can only update their own weight records
create policy "authenticated_weight_records_update_policy"
on weight_records for update
to authenticated
using (user_id = auth.uid())
with check (user_id = auth.uid());

-- create rls policy for delete operations (anon role)
-- anon users cannot delete weight records
create policy "anon_weight_records_delete_policy"
on weight_records for delete
to anon
using (false);

-- create rls policy for delete operations (authenticated role)
-- authenticated users can only delete their own weight records
create policy "authenticated_weight_records_delete_policy"
on weight_records for delete
to authenticated
using (user_id = auth.uid());

